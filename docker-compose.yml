version: "3.3"

services:
  db:
    restart: always
    image: mysql:5.7
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      NODE_ENV: production
    volumes:
      - standardnotes_db:/var/lib/mysql
    networks:
      standardnotes:
        aliases:
          - db

  web:
    restart: always
    build: ./web
    env_file:
      - .env
    environment:
      RAILS_ENV: production
      PORT: 3000
      APP_HOST: ${APP_HOSTNAME}
      SECRET_KEY_BASE: ${APP_SECRET}
      SF_DEFAULT_SERVER: ${API_HOSTNAME}
      EXTENSIONS_MANAGER_LOCATION: extensions/extensions-manager/dist/index.html
      BATCH_MANAGER_LOCATION: extensions/batch-manager/dist/index.min.html
      RAILS_SERVE_STATIC_FILES: "true"
    networks:
      standardnotes:
        aliases:
          - web

  nginx:
    restart: always
    depends_on:
      - web
      - api-gateway
    build: ./nginx
    ports:
      - ${PORT}:3000
    networks:
      standardnotes:
        aliases:
          - nginx

  cache:
    image: redis:6.0-alpine
    volumes:
      - standardnotes_cache:/data
    networks:
      standardnotes:
        aliases:
          - cache

  syncing-server-js:
    image: standardnotes/syncing-server-js:1.35.2
    depends_on:
      - db
      - cache
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./docker/entrypoint.sh", "start-web"
    ]
    env_file:
      - .env
    environment:
      PORT: 3000
      EXPOSED_PORT: 3000
      LOG_LEVEL: info
      NODE_ENV: production
      AUTH_JWT_SECRET: ${AUTH_SECRET}
      DB_HOST: db
      DB_REPLICA_HOST: db
      DB_PORT: 3306
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASS}
      DB_DATABASE: ${DB_NAME}
      DB_DEBUG_LEVEL: info # "all" | "query" | "schema" | "error" | "warn" | "info" | "log" | "migration"
      DB_MIGRATIONS_PATH: dist/migrations/*.js
      REDIS_URL: redis://cache
      REDIS_EVENTS_CHANNEL: events
      AUTH_SERVER_URL: http://auth:3000
      EMAIL_ATTACHMENT_MAX_BYTE_SIZE: 10485760
      REVISIONS_FREQUENCY: 300
      NEW_RELIC_ENABLED: "false"
      NEW_RELIC_APP_NAME: "Syncing Server JS"
    restart: always
    networks:
      standardnotes:
        aliases:
          - syncing-server-js

  syncing-server-js-worker:
    image: standardnotes/syncing-server-js:1.35.2
    depends_on:
      - db
      - cache
      - syncing-server-js
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./wait-for.sh", "syncing-server-js", "3000",
       "./docker/entrypoint.sh", "start-worker"
    ]
    env_file:
      - .env
    environment:
      PORT: 3000
      LOG_LEVEL: info
      NODE_ENV: production
      AUTH_JWT_SECRET: ${AUTH_SECRET}
      EXPOSED_PORT: 3000
      DB_HOST: db
      DB_REPLICA_HOST: db
      DB_PORT: 3306
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASS}
      DB_DATABASE: ${DB_NAME}
      DB_DEBUG_LEVEL: info # "all" | "query" | "schema" | "error" | "warn" | "info" | "log" | "migration"
      DB_MIGRATIONS_PATH: dist/migrations/*.js
      REDIS_URL: redis://cache
      REDIS_EVENTS_CHANNEL: events
      AUTH_SERVER_URL: http://auth:3000
      EMAIL_ATTACHMENT_MAX_BYTE_SIZE: 10485760
      REVISIONS_FREQUENCY: 300
      NEW_RELIC_ENABLED: "false"
      NEW_RELIC_APP_NAME: "Syncing Server JS Worker"
    restart: always
    networks:
      standardnotes:
        aliases:
          - syncing-server-js-worker

  api-gateway:
    image: standardnotes/api-gateway:1.20.0
    depends_on:
      - auth
      - syncing-server-js
    env_file:
      - .env
    environment:
      PORT: 3000
      AUTH_JWT_SECRET: ${AUTH_SECRET}
      LOG_LEVEL: info
      NODE_ENV: production
      NEW_RELIC_ENABLED: "false"
      NEW_RELIC_APP_NAME: "API Gateway"
      SYNCING_SERVER_JS_URL: http://syncing-server-js:3000
      AUTH_SERVER_URL: http://auth:3000
    entrypoint: [
      "./wait-for.sh", "auth", "3000",
      "./wait-for.sh", "syncing-server-js", "3000",
      "./docker/entrypoint.sh", "start-web"
    ]
    networks:
      standardnotes:
        aliases:
          - api-gateway

  auth:
    image: standardnotes/auth:1.11.0
    depends_on:
      - db
      - cache
      - syncing-server-js
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./wait-for.sh", "syncing-server-js", "3000",
      "./docker/entrypoint.sh", "start-web"
    ]
    env_file:
      - .env
    environment:
      PORT: 3000
      DB_HOST: db
      DB_REPLICA_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_NAME}
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASS}
      DB_DEBUG_LEVEL: info
      DB_MIGRATIONS_PATH: dist/migrations/*.js
      REDIS_URL: redis://cache
      AUTH_JWT_SECRET: ${AUTH_SECRET}
      LOG_LEVEL: info
      NODE_ENV: production
      AUTH_JWT_TTL: 60000
      JWT_SECRET: ${JWT_SECRET}
      LEGACY_JWT_SECRET: ${LEGACY_JWT_SECRET}
      NEW_RELIC_ENABLED: "false"
      NEW_RELIC_APP_NAME: "Auth"
      REDIS_EVENTS_CHANNEL: auth-events
      DISABLE_USER_REGISTRATION: ${DISABLE_REGISTRATION}
      PSEUDO_KEY_PARAMS_KEY: ${PSEUDO_KEY_PARAMS_KEY}
      ACCESS_TOKEN_AGE: 5184000
      REFRESH_TOKEN_AGE: 31556926
      MAX_LOGIN_ATTEMPTS: 6
      FAILED_LOGIN_LOCKOUT: 3600
      EPHEMERAL_SESSION_AGE: 259200
      ENCRYPTION_SERVER_KEY: ${ENCRYPTION_SERVER_KEY}
      SYNCING_SERVER_URL: http://syncing-server-js:3000
    networks:
      standardnotes:
        aliases:
          - auth

  auth-worker:
    image: standardnotes/auth:1.11.0
    depends_on:
      - db
      - cache
      - auth
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./wait-for.sh", "auth", "3000",
      "./docker/entrypoint.sh", "start-worker"
    ]
    env_file:
      - .env
    environment:
      PORT: 3000
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_NAME}
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASS}
      REDIS_URL: redis://cache
      AUTH_JWT_SECRET: ${AUTH_SECRET}
      LOG_LEVEL: info
      NODE_ENV: production
      AUTH_JWT_TTL: 60000
      JWT_SECRET: ${JWT_SECRET}
      LEGACY_JWT_SECRET: ${LEGACY_JWT_SECRET}
      NEW_RELIC_ENABLED: "false"
      NEW_RELIC_APP_NAME: "Auth Worker"
      REDIS_EVENTS_CHANNEL: auth-events
      DISABLE_USER_REGISTRATION: ${DISABLE_REGISTRATION}
      PSEUDO_KEY_PARAMS_KEY: ${PSEUDO_KEY_PARAMS_KEY}
      ACCESS_TOKEN_AGE: 5184000
      REFRESH_TOKEN_AGE: 31556926
      MAX_LOGIN_ATTEMPTS: 6
      FAILED_LOGIN_LOCKOUT: 3600
      EPHEMERAL_SESSION_AGE: 259200
      ENCRYPTION_SERVER_KEY: ${ENCRYPTION_SERVER_KEY}
      SYNCING_SERVER_URL: http://syncing-server-js:3000
    networks:
      standardnotes:
        aliases:
          - auth-worker

volumes:
  standardnotes_db:
  standardnotes_cache:
networks:
  standardnotes:

